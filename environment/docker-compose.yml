version: '3.9'

services:
  pg-development:
    image: postgres
    container_name: postgres-container
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /data/postgres
    volumes:
      - pg-development:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - development
    restart: unless-stopped

  api-development:
    build:
      dockerfile: ./environment/docker/api/Dockerfile
      context: ..
      target: development
    container_name: api-development-container
    command: npm run serve
    environment:
      - PORT=3000
      - DB_DATABASE=postgres
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=pg-development
      - DB_PORT=5432
      - DB_DIALECT=postgres
    ports:
      - "3000:3000"
    volumes:
      - ../:/usr/src/app/
      - /usr/src/app/node_modules
    networks:
      - development
    depends_on:
      - pg-development
    restart: unless-stopped

  pg-distribution:
    image: postgres
    container_name: postgres-container
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /data/postgres
    volumes:
      - pg-distribution:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - distribution
    restart: unless-stopped
  api-distribution:
    build:
      dockerfile: ./environment/docker/api/Dockerfile
      context: ..
      args:
        EXPOSE_PORT: 3000
      target: distribution
    image: api-municipios:latest
    container_name: api-distribution-container
    environment:
      - PORT=3000
      - DB_DATABASE=postgres
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=pg-distribution
      - DB_PORT=5432
      - DB_DIALECT=postgres
    ports:
      - "3000:3000"
    networks:
      - distribution
    depends_on:
      - pg-distribution
    restart: unless-stopped

networks:
  development:
    driver: bridge
  distribution:
    driver: bridge

volumes:
  pg-development:
  pg-distribution:
